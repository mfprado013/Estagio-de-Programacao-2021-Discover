# A Cascata (cascading)

A escolha do browser de qual regra aplicar, caso hoje muitas regras para p mesmo elemento.

* Seu estilo é lido de cima para baixo.

1 - origem
2 - especificidade
3 - importancia

### Origem do estilo

inline > tag Style > tag link

### Especificidade
 
É um calculo matematico, onde, cada tipo de selector e origem de estilo, possuem valores a serem considerados.

0 - Universal selector, combinators e negation pseudo-class (:not())
1 - Element type selector e pseudo-elements (::before, ::after)
10 - classes e attribute selectors ([type="radio"])
100 - id selector.
1000 - inline

### A regra !important

* cuidado evite o uso
* não é considerado uma boa pratica
* quebra o cluxo natural da cascata

<h1 class="title" id="my-title">titulo</h1>

<style>
  h1 {
    color: black;
  }
</style> = e essa origem  se torna mais forte que a debaixo


<h1 style="color": red>Titulo</h1>
               
<p>subtitulo</p> = essa origem se torna mais forte que o que o outro
 


## origem

<style>
  h1 {
    color: black;
  }
</style> = e essa origem  se torna mais forte que a debaixo


<h1 style="color": red>Titulo</h1>
               
<p>subtitulo</p> = essa origem se torna mais forte que o que o outro

h1 {
  color: green:
}

h1 {
  color: silver 
} = essa origem se torna mais forte


Aqui mostra as origens do CSS, onde usamos e qual se torna mais forte que a outra, lembrando que o CSS trabalha em forma de castaca, sendo que a mais forte sempre sera a debaixo.


.title {
  color: green;
} = quando colocado no html uma class não usa a ordem da cascata e sim com ele tem que ser o primeiro

#my-title {
  color:red;
}
h1 {
  color: green:
}

h1.tittle#my-title {
  color: silver 
} = essa origem se torna mais forte

* {
  color:green;
} = mesmo colocando ele embaixo ela não funciona 


o !important pega o mais fraco e acaba com a estrurta, o !important serve so para a gente acessar as informaçoes no css de alguem se agnt tiver usando de alguem, agora se estamos fazendo nosso prorpio não precisamos usar. 